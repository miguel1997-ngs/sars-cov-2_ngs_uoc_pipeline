# Análisis bioinformático empleado para detectar las mutaciones presentes en el genoma del SARS-CoV-2

# En primer lugar, evaluamos la calidad de las lecturas de los archivos en formato fastq, empleando el programa FastQC. 

fastqc R1.fastq.gz R2.fastq.gz

## Para facilitar la comprensión del código: R1 --> lecturas forward; R2 --> lecturas reverse.

# Filtramos por tamaño (>= 70 bp) y por calidad (QC >= 20) y comprimos los archivos:

cutadapt -m 100 -q 20 --pair-filter=any R1.fastq.gz R2.fastq.gz -o R1_cutadapt.fastq -p  R2_cutadapt.fastq
gzip R1_cutadapt.fast R2_cutadapt.fastq

# Comprobamos que el filtraje se ha realizado correctamente, empleando del nuevo el programa FastQC

fastqc R1_cutadapt.gz R2_cutadapt.gz

# Generación del archivo de con las secuencidas alineadas con respecto al genoma de referencia, para lo que hay que indexar primero dicho genoma de referencia

bwa index reference.fasta 
bwa mem reference.fasta R1_cutadapt.gz R2_cutadapt.gz > archivo.sam

# Generamos el archivo de alineamiento en formato bam y lo ordenamos, usando la herramienta samtools

samtools view -bS archivo.sam > archivo.bam
samtools sort -o archivo_ordenado.bam archivo.bam

# Obtenemos las posiciones mutadas, combinando samtools y bcftools, obteniendo el archivo en formato VCF

samtools mpileup -u -v -f reference.fasta -t AD archivo_ordenado.bam | bcftools call --ploidy 1 -mv -Ov -o archivo.vcf

# Seleccionamos las columnas del archivo en formato VCF que nos interesan.
# Solamente se seleccionarán aquellas posiciones que presenten una profundidad de secuencia (DP) superior a 50 y que hayan aparecido mutadas en al menos el 75% de las lecturas que cubren dichas posiciones

grep -v "##" archivo.vcf | gawk '{print $2,$4,$5,$10}' | tr : "\t"|gawk '{print $1,$2,$3,$6}'|tr , "\t" | gawk '{print $1,$2,$3,$4+$5,$4,$5}'|grep -v "POS" |gawk '{if($5/$4<0.25) $7=$3; if($5/$4>=0.25) $7=$2}''{print $1,$2,$3,$4,$5,$6,$7}'|gawk '{$8=$5"/"$6}''{print $1,$2,$3,$4,$8,$7}'|gawk '{if($6==$3) $7="YES"; if($6!=$3) $7="NO"}''{print $1,$2,$3,$4,$5,$6,$7}'|gawk '{if($4>=50) print $1,$2,$3,$4,$5,$6,$7}'|tr " " "\t" > archivo.txt

echo -e "POS\tREF\tALT\tDP\tAD\tDEF\tVAR" > titulos.txt

cat titulos.txt archivo.txt 
